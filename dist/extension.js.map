{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uGCnBf,eAIA,oBAAyBQ,GAIxBC,QAAQC,IAAI,iEAEZ,IAAIC,EAAsBH,EAAQI,eAAe,aACjDC,EAAOC,UAAUC,mBAAmBC,OAAO,wBAAyBL,EAAaE,EAAOI,oBAAoBC,QAC5GL,EAAOM,OAAOC,uBAAuB,oEAKtC,wBACCP,EAAOC,UAAUC,mBAAmBC,OAAO,wBAAyB,KAAMH,EAAOI,oBAAoBC,U","sources":["webpack://gcov7-viewer/external commonjs \"vscode\"","webpack://gcov7-viewer/webpack/bootstrap","webpack://gcov7-viewer/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\t\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"gcov7-viewer\" is now active!');\n\n\tlet gcovAdapter: string = context.asAbsolutePath(\"README.md\");\n\tvscode.workspace.getConfiguration().update(\"gcovViewer.gcovBinary\", gcovAdapter, vscode.ConfigurationTarget.Global);\n\tvscode.window.showInformationMessage('gcovViewer.gcovBinary has been replaced with gcov7-json adapter');\n\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {\n\tvscode.workspace.getConfiguration().update(\"gcovViewer.gcovBinary\", null, vscode.ConfigurationTarget.Global);\n}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","console","log","gcovAdapter","asAbsolutePath","vscode","workspace","getConfiguration","update","ConfigurationTarget","Global","window","showInformationMessage"],"sourceRoot":""}